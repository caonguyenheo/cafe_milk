%%{
/*
 * Copyright (c) 2018 Texas Instruments Incorporated - http://www.ti.com
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * *  Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 * *  Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * *  Neither the name of Texas Instruments Incorporated nor the names of
 *    its contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
 * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 */

/*
 *  ======== RFCC26XX.Board.h.xdt ========
 */

    /* RF module passed in args[] */
    let RF = args[0];

    /* get ti/drivers common utility functions */
    let Common = system.getScript("/ti/drivers/Common.js");

    /* localize the object names with this device ID */
    let devId = system.deviceData.deviceId;

    /* Get name of device specific include directory */
    let devicesDir = Common.device2DevicesDir(devId);

    let boardName = Common.boardName();
    let rfPinName = '';
    let rfPowerPinName = '';
    let ioid = '';
    let ioidPower = '';
    let dio = '';
    let devPins = RF.moduleStatic.devicePins;

    for (let i = 0; i < devPins.length; i++) {
        if (devPins[i].name.match(/SUB1GHZ/)) {
            ioid = devPins[i].ioid;
            dio = ioid.replace(/IOID_/, 'DIO');
            rfPinName = 'Board_' + dio + '_RFSW';
        }
        if (devPins[i].name.match(/POWER/) &&
                boardName.match(/CC1350_LAUNCHXL/)) {
            ioidPower = devPins[i].ioid;
            dio = ioidPower.replace(/IOID_/, 'DIO');
            rfPowerPinName = 'Board_' + dio + '_SWPWR';
        }
    }
%%}
% if (rfPinName.length > 0) {
%
%  // Special defines needed for RF examples.
%
/*
 *  ======== RF ========
 */
#include <ti/devices/`devicesDir`/driverlib/ioc.h>

#define `rfPinName` `ioid`
% if (rfPowerPinName.length > 0) {
#define `rfPowerPinName` `ioidPower`
% }
% }
